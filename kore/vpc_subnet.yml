AWSTemplateFormatVersion: "2010-09-09"

Resources:
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        -
          Key: Name
          Value: MyVPC

  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/24
      MapPublicIpOnLaunch: false
      VpcId: !Ref MyVPC
      AvailabilityZone: 
        Fn::Select: 
          - 0
          - Fn::GetAZs: ""
      Tags:
        - Key: Name
          Value: privateSubnet

  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ec2-sg
      GroupDescription: Allow SSH and HTTP access only MyIP
      VpcId: !Ref MyVPC
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          DestinationPrefixListId: "pl-61a54008"
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: "10.0.0.0/16"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: "10.0.0.0/16"

  ssmEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Join
        - ""
        - - com.amazonaws.
          - !Ref "AWS::Region"
          - .ssm
      SubnetIds:
        - !Ref privateSubnet
      VpcId: !Ref MyVPC
      VpcEndpointType: Interface
      SecurityGroupIds:
        - !Ref EC2SG
      PrivateDnsEnabled: true

  ec2meEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Join
        - ""
        - - com.amazonaws.
          - !Ref "AWS::Region"
          - .ec2messages
      SubnetIds:
        - !Ref privateSubnet
      VpcId: !Ref MyVPC
      VpcEndpointType: Interface
      SecurityGroupIds:
        - !Ref EC2SG
      PrivateDnsEnabled: true

  ssmmeEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Join
        - ""
        - - com.amazonaws.
          - !Ref "AWS::Region"
          - .ssmmessages
      SubnetIds:
        - !Ref privateSubnet
      VpcId: !Ref MyVPC
      VpcEndpointType: Interface
      SecurityGroupIds:
        - !Ref EC2SG
      PrivateDnsEnabled: true

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: MyRouteTable

  assocciateRouteTableForPrivateSubnet:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyRouteTable
      SubnetId: !Ref privateSubnet

  MyVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref MyVPC
      ServiceName: com.amazonaws.ap-northeast-1.s3
      RouteTableIds:
        - !Ref MyRouteTable
      VpcEndpointType: Gateway

# リソースをoutputする
Outputs:
  CrossStackMyVPC:
    Value: !Ref MyVPC
    Export:
      Name: CrossStackMyVPC
  CrossStackPrivateSubnet:
    Value: !Ref privateSubnet
    Export:
      Name: CrossStackPrivateSubnet
  CrossStackRouteTable:
    Value: !Ref MyRouteTable
    Export:
      Name: CrossStackRouteTable
  CrossStackEC2SG:
    Value: !Ref EC2SG
    Export:
      Name: CrossStackEC2SG

